- name: Check if APT repo exist
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/docker.list
  register: docker_install
  become: true

- name: Add APT repository # noqa yaml
  ansible.builtin.shell: |
    set -o pipefail

    wget -qO- https://download.docker.com/linux/debian/gpg \
      | gpg --dearmor \
      | tee /etc/apt/trusted.gpg.d/docker.gpg

    chmod 644 /etc/apt/trusted.gpg.d/docker.gpg
    chown root:root /etc/apt/trusted.gpg.d/docker.gpg

    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" \
      | tee /etc/apt/sources.list.d/docker.list
  become: true
  when: not docker_install.stat.exists
  args:
    executable: /bin/bash

- name: Update package repositories
  ansible.builtin.apt:
    update_cache: true
  become: true
  when: not docker_install.stat.exists

- name: Install docker packages
  ansible.builtin.package: # noqa package-latest
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    state: latest
  become: true
  when: not docker_install.stat.exists

- name: Switch to legacy iptables
  ansible.builtin.command: update-alternatives --set iptables /usr/sbin/iptables-legacy
  become: true
  when: not docker_install.stat.exists

- name: Add user to docker group
  ansible.builtin.command: usermod -aG docker "{{ ansible_facts['user_id'] }}"
  become: true
  when: not docker_install.stat.exists
