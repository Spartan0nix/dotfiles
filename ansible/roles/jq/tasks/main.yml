---
- name: Install requirements
  ansible.builtin.package: # noqa : package-latest
    name:
      - git
    state: latest
  become: true

- name: Check for existing installation
  ansible.builtin.stat:
    path: /usr/local/bin/jq
  register: jq_install

- name: Get the version installed
  ansible.builtin.shell: |
    set -o pipefail
    /usr/local/bin/jq --version | sed 's/jq-//'
  args:
    executable: /bin/bash
  register: jq_version
  changed_when: false
  failed_when: jq_version.rc != 0
  when: jq_install.stat.exists

- name: Get the latest version available
  ansible.builtin.shell: |
    set -o pipefail
    git ls-remote --tags https://github.com/jqlang/jq.git \
    | grep -E 'jq-[0-9]+.[0-9]+(\.[0-9]+)?$' \
    | cut --delimiter="/" --fields=3 \
    | sort --version-sort \
    | tail -1 \
    | sed 's/jq-//'
  args:
    executable: /bin/bash
  register: jq_latest_version
  changed_when: false
  failed_when: jq_latest_version.rc != 0

- name: Remove the existing installation
  ansible.builtin.file:
    path: /usr/local/bin/jq
    state: absent
  become: true
  when:
    - jq_install.stat.exists
    - jq_version.stdout != jq_latest_version.stdout

- name: Retrieve the sources (amd64)
  ansible.builtin.get_url:
    url: "https://github.com/jqlang/jq/releases/download/jq-{{ jq_latest_version.stdout }}/jq-linux-amd64"
    checksum: "sha256:https://github.com/jqlang/jq/releases/download/jq-{{ jq_latest_version.stdout }}/sha256sum.txt"
    dest: /usr/local/bin/jq
    owner: root
    group: root
    mode: "0755"
  become: true
  when:
    - ansible_machine  | lower in ["x86_64", "amd64"]
    - not jq_install.stat.exists or (jq_version.stdout | default('') != jq_latest_version.stdout)
