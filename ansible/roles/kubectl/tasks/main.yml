---
- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Get the version of Kubectl installed
  ansible.builtin.set_fact:
    kubectl_version: "v{{ kubectl_long_version | ansible.builtin.regex_search('1\\.[0-9]+') }}"
  vars:
    kubectl_long_version: "{{ ansible_facts.packages['kubectl'][0]['version'] }}"
  when: '"kubectl" in ansible_facts.packages'

- name: Get the latest version of Kubernetes
  ansible.builtin.uri:
    url: https://api.github.com/repos/kubernetes/kubernetes/releases/latest
    return_content: true
    method: GET
  register: kubernetes_latest_raw

- name: Extract the latest version of Kubernetes
  ansible.builtin.set_fact:
    kubernetes_latest_version: "{{ kubernetes_long_version | ansible.builtin.regex_search('v1\\.[0-9]+') }}"
  vars:
    kubernetes_long_version: "{{ kubernetes_latest_raw.json | community.general.json_query('tag_name') }}"

- name: Configure (debian)
  ansible.builtin.include_tasks: debian.yml
  when:
    - ansible_os_family | lower == "debian"
    - kubectl_version is not defined or (kubectl_version != kubernetes_latest_version)

- name: Install packages
  ansible.builtin.package: # noqa: package-latest
    name:
      - kubectl
      - bash-completion
    state: latest
  become: true

- name: Configure bash completion
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.bashrc"
    create: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0640"
    marker: "# {mark} Kubectl completion configuration"
    append_newline: true
    prepend_newline: true
    block: |
      source <(kubectl completion bash)
  when: '"bash" in kubectl_shell_completion'

- name: Configure zsh completion
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    create: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
    mode: "0640"
    marker: "# {mark} Kubectl completion configuration"
    append_newline: true
    prepend_newline: true
    block: |
      source <(kubectl completion zsh)
  when: '"zsh" in kubectl_shell_completion'
