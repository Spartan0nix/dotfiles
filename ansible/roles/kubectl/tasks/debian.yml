---
- name: Install requirements
  ansible.builtin.package: # noqa: package-latest
    name:
      - ca-certificates
    state: latest
  become: true

- name: Check the presence of the APT repo
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/kubernetes.list
  register: kubernetes_apt

- name: Remove the previous APT configuration
  ansible.builtin.file:
    path: "{{ file }}"
    state: absent
  loop_control:
    loop_var: file
  loop:
    - /etc/apt/sources.list.d/kubernetes.list
    - /usr/share/keyrings/kubernetes.asc
    - /etc/apt/preferences.d/kubernetes
  become: true
  when: kubernetes_apt.stat.exists

- name: Extract the short version format (X.Y)
  ansible.builtin.set_fact:
    kubernetes_short_version: "{{ kubernetes_latest_version.stdout | regex_replace('\\.[0-9]+$', '') }}"

- name: Retrieve the GPG key
  ansible.builtin.get_url:
    url: "https://pkgs.k8s.io/core:/stable:/{{ kubernetes_short_version }}/deb/Release.key"
    dest: /usr/share/keyrings/kubernetes.asc
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Add the APT repository
  ansible.builtin.apt_repository:
    repo: >
      deb
      [arch=amd64 signed-by=/usr/share/keyrings/kubernetes.asc]
      https://pkgs.k8s.io/core:/stable:/{{ kubernetes_short_version }}/deb/
      /
    filename: kubernetes
    state: present
    update_cache: true
  become: true

- name: Copy the APT preference configuration
  ansible.builtin.copy:
    src: apt-preference
    dest: /etc/apt/preferences.d/kubernetes
    owner: root
    group: root
    mode: "0644"
  become: true
